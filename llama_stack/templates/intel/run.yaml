version: '2'
image_name: intel
apis:
- agents
- datasetio
- eval
- inference
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: intel
    provider_type: remote::intel
    config:
      url: ${env.INTEL_BASE_URL:https://api.inference.denvrdata.com/v1}
      api_key: ${env.INTEL_API_KEY:}
  vector_io:
  - provider_id: faiss
    provider_type: inline::faiss
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/faiss_store.db
  safety:
  - provider_id: llama-guard
    provider_type: inline::llama-guard
    config:
      excluded_categories: []
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/agents_store.db
      responses_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/responses_store.db
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "${env.OTEL_SERVICE_NAME:\u200B}"
      sinks: ${env.TELEMETRY_SINKS:console,sqlite}
      sqlite_db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/trace_store.db
  eval:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/meta_reference_eval.db
  datasetio:
  - provider_id: localfs
    provider_type: inline::localfs
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/localfs_datasetio.db
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  tool_runtime:
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/registry.db
inference_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/intel}/inference_store.db
models:
- metadata: {}
  model_id: meta-llama/Llama-3.3-70B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.3-70B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.3-70B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.3-70B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.2-1B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.2-1B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.2-1B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.2-1B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.2-3B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.2-3B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.2-3B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.2-3B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.1-70B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.1-70B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.1-70B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Llama-3.1-70B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Meta-Llama-3.1-8B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Meta-Llama-3.1-8B-Instruct
  model_type: llm
- metadata: {}
  model_id: meta-llama/Llama-3.1-8B-Instruct
  provider_id: intel
  provider_model_id: meta-llama/Meta-Llama-3.1-8B-Instruct
  model_type: llm
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
server:
  port: 8321
